[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.0"
tag_format = "$version"
version_files = [
    "pyproject.toml:version"
]


[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''


[tool.isort]
profile = "black"


[tool.pylint]
    [tool.pylint.messages_control]
    disable = [
        "bad-continuation",
        "missing-function-docstring",
        "missing-module-docstring",
        "invalid-name"
    ]

    [tool.pylint.format]
    max-line-length = 88


[tool.pytest.ini_options]
minversion = "6.0"
testpaths = "tests"
addopts = "--strict-markers"
norecursedirs = [
    ".*",
    "build",
    "dist",
    "CVS",
    "_darcs",
    "{arch}",
    "*.egg",
    "venv",
    "env",
    "virtualenv"
]


[tool.coverage]
    [tool.coverage.report]
    show_missing = true
    exclude_lines = [
        # Have to re-enable the standard pragma
        'pragma: no cover',

        # Don't complain about missing debug-only code:
        'def __repr__',
        'if self\.debug',

        # Don't complain if tests don't hit defensive assertion code:
        'raise AssertionError',
        'raise NotImplementedError',

        # Don't complain if non-runnable code isn't run:
        'if 0:',
        'if __name__ == .__main__.:',
        'pass'
    ]
    omit = [
        'env/*',
        'venv/*',
        '*/virtualenv/*',
        '*/virtualenvs/*',
        '*/tests/*'
    ]

[tool.poetry]
name = "pelican_stat"
version = "0.2.0"
description = "Command line tool that generates pelican article statistics"
readme = "docs/README.md"
authors = ["Wei Lee <weilee.rx@gmail.com>"]
license = "MIT license"

[tool.poetry.dependencies]
python = "^3.7.1"
pelican = "4.5.4"
Markdown = "^3.3.3"
click = "^7.1.2"
plotly = "^4.14.3"
pandas = "^1.2.1"

[tool.poetry.dev-dependencies]
# task management
invoke = "^1.4.1"
# test
pytest = "^6.0.1"
pytest-cov = "^2.8.1"
pytest-mock = "^3.0.0"
pytest-xdist = "^1.31.0"
hypothesis = "^5.8.0"
coverage = {extras = ["toml"], version = "^5.0.4"}
# style
flake8 = "^3.7.9"
pylint = "^2.4.4"
mypy = "^0.770"
black = "^19.10b0"
isort = "^5.0.0"
# security
bandit = "^1.6.2"
safety = "^1.8.7"
# git
commitizen = "^2.4.0"
pre-commit = "^2.2.0"
# documentation
mkdocs = "^1.1"
mkdocs-material = "^5.0.1"
pytest-regressions = "^2.1.1"
ipython = "^7.19.0"

[tool.poetry.scripts]
pelican-stat = "pelican_stat.__main__:main"

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
