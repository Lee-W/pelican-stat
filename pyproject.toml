[project]
name = "pelican_stat"
version = "0.3.1"
authors = [{ name = "Wei Lee", email = "weilee.rx@gmail.com" }]
description = "cli tool for generating pelican article statistics"
license = { file = "LICENSE" }
readme = "docs/README.md"
requires-python = ">=3.9,<4.0"
dependencies = [
    "click>=8.1.8",
    "pandas>=2.2.3",
    "pelican[markdown]>=4.11.0",
    "plotly>=5.24.1",
]

[project.scripts]
pelican-stat = "pelican_stat.__main__:main"

[project.urls]
Documentation = "https://github.com/Lee-W/pelican_stat/blob/docs/README.md"
Repository = "https://github.com/Lee-W/pelican_stat"
Issues = "https://github.com/Lee-W/pelican_stat/issues"
Changelog = "https://github.com/Lee-W/pelican_stat/blob/main/CHANGELOG.md"

[dependency-groups]
dev = ["invoke>=2.2.0"]
test = [
    "coverage[toml]>=7.6.10",
    "pytest-regressions>=2.7.0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
]
style = ["mypy>=1.14.1", "ruff>=0.9.2"]
security = ["bandit>=1.2.2", "pip-audit>=2.7.3"]
git = ["commitizen>=4.1.0", "pre-commit>=4.0.1"]
doc = ["mkdocs>=1.6.1", "mkdocs-material>=9.5.50"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.commitizen]
name = "cz_conventional_commits"
version = "0.3.1"
tag_format = "$version"
version_files = ["pyproject.toml:version"]


[tool.mypy]
files = ["pelican_stat", "tests"]
ignore_missing_imports = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_untyped_decorators = false
# Ensure full coverage
disallow_untyped_calls = true
disallow_incomplete_defs = true
# Restrict dynamic typing
disallow_any_generics = true
disallow_subclassing_any = true
warn_return_any = true


[tool.ruff]
line-length = 110

[tool.ruff.lint]
extend-select = [
    "I",     # Missing required import (auto-fixable)
    "UP",    # Pyupgrade
    "PT",    # flake8-pytest-style rules
    "TID25", # flake8-tidy-imports rules
]

ignore = ["E501", "D1", "D415"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
combine-as-imports = true
known-first-party = ["tests"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.pytest.ini_options]
minversion = "8.0.0"
testpaths = "tests"
addopts = "--strict-markers"
norecursedirs = [
    ".*",
    "build",
    "dist",
    "CVS",
    "_darcs",
    "{arch}",
    "*.egg",
    "venv",
    "env",
    "virtualenv",
]


[tool.coverage]
[tool.coverage.report]
show_missing = true
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',

    # Don't complain about missing debug-only code:
    'def __repr__',
    'if self\.debug',

    # Don't complain if tests don't hit defensive assertion code:
    'raise AssertionError',
    'raise NotImplementedError',

    # Don't complain if non-runnable code isn't run:
    'if 0:',
    'if __name__ == .__main__.:',
]
omit = ['env/*', 'venv/*', '*/virtualenv/*', '*/virtualenvs/*', '*/tests/*']
